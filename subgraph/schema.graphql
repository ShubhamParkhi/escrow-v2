enum Status {
  NoDispute
  WaitingSettlementBuyer
  WaitingSettlementSeller
  WaitingBuyer
  WaitingSeller
  DisputeCreated
  TransactionResolved
}

enum Party {
  None
  Buyer
  Seller
}

enum Resolution {
  TransactionExecuted
  TimeoutByBuyer
  TimeoutBySeller
  RulingEnforced
  SettlementReached
}

type Escrow @entity {
  id: ID!
  transactionUri: String!
  buyer: Bytes!
  seller: Bytes!
  users: [User!]!
  amount: BigInt!
  deadline: BigInt!
  buyerFee: BigInt
  sellerFee: BigInt
  lastFeePaymentTime: BigInt
  feeTimeout: BigInt
  settlementTimeout: BigInt
  arbitratorExtraData: Bytes
  templateData: String
  templateDataMappings: String
  token: Bytes
  status: Status
  timestamp: BigInt
  transactionHash: Bytes!
  payments: [Payment!]! @derivedFrom(field: "escrow")
  hasToPayFees: [HasToPayFee!]! @derivedFrom(field: "escrow")
  createdEvents: [TransactionCreated!]! @derivedFrom(field: "escrow")
  resolvedEvents: [TransactionResolved!]! @derivedFrom(field: "escrow")
  settlementProposals: [SettlementProposal!]! @derivedFrom(field: "escrow")
  disputeRequest: DisputeRequest @derivedFrom(field: "escrow")
}

type User @entity {
  id: ID!
  escrows: [Escrow!]! @derivedFrom(field: "users")
  totalEscrows: BigInt!
  totalResolvedEscrows: BigInt!
  totalDisputedEscrows: BigInt!
  totalNoDisputedEscrows: BigInt!
  totalWaitingBuyerEscrows: BigInt!
  totalWaitingSellerEscrows: BigInt!
}

type Payment @entity {
  id: ID!
  escrow: Escrow!
  amount: BigInt!
  party: Bytes!
  timestamp: BigInt
}

type HasToPayFee @entity {
  id: ID!
  escrow: Escrow!
  party: String
  timestamp: BigInt
}

type DisputeRequest @entity {
  id: ID!
  escrow: Escrow!
  timestamp: BigInt
  from: Bytes
}

type TransactionCreated @entity {
  id: ID!
  escrow: Escrow!
}

type TransactionResolved @entity {
  id: ID!
  escrow: Escrow!
  resolution: Int!
  timestamp: BigInt
}

type SettlementProposal @entity {
  id: ID!
  escrow: Escrow!
  party: String
  amount: BigInt!
  timestamp: BigInt!
}

type EscrowParameters @entity {
  id: ID!
  feeTimeout: BigInt!
  settlementTimeout: BigInt!
  arbitratorExtraData: Bytes!
}
